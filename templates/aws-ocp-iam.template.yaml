AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys IAM roles and policies required for the AWS RHEL OCP Lab
Parameters:
  LambdaZipsBucketName:
    Description: Bucket Name where the lambda zip files should be placed
    Type: String
  IgnitionBucketName:
    Description: Bucket Name where the IgnitionCondfig files should be placed
    Type: String
  ClusterName:
    Description: ClusterName base for the overall deployment, needed for the ValidateEvent that is created.
    Type: String
  QSS3BucketName:
    Description: 'S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start
      or end with a hyphen (-).'
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: 'Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).'
    Default: aws-quickstart
    Type: String
  QSS3KeyPrefix:
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: aws-ocp/
    Type: String

Resources:
  StackDirectorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: stackdirector
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource:
                  - !Sub 'arn:aws:s3:::${IgnitionBucketName}/*'
                  - !Sub 'arn:aws:s3:::${IgnitionBucketName}'
        - PolicyName: DisableValidateCron
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:DisableRule
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/${ClusterName}-ValidateEvent"
        - PolicyName: CFValidation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - iam:GetUser
                  - iam:CreateUser
                  - iam:DeleteUser
                  - iam:AttachUserPolicy
                  - iam:DetachUserPolicy
                  - iam:ListAccessKeys
                  - iam:CreateLoginProfile
                  - iam:DeleteLoginProfile
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:PassRole
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile	
                  - iam:CreateServiceLinkedRole
                  - lambda:CreateFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:DeleteFunction
                  - lambda:InvokeFunction
                  - cloudformation:Create*
                  - cloudformation:ListStacks*
                  - cloudformation:Delete*
                  - cloudformation:Describe*
                  - ec2:DescribeVpcs
                  - ec2:DescribeImages
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups	
                  - ec2:DescribeInternetGateways	
                  - ec2:DescribeAccountAttributes
                  - ec2:CreateSecurityGroup
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:DeleteSecurityGroup
                  - ec2:RunInstances
                  - ec2:TerminateInstances
                  - ec2:DescribeInstances
                  - ec2:createTags
                  - ec2:DeleteTags
                  - cloud9:CreateEnvironmentEC2
                  - cloud9:CreateEnvironmentSSH
                  - cloud9:DeleteEnvironment
                  - cloud9:Describe*
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DeleteTargetGroup
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:DeleteListener
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:ModifyTargetGroupAttributes
                  - route53:ChangeResourceRecordSets
                  - route53:ChangeTagsForResource
                  - route53:ListResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListHostedZones
                  - route53:CreateHostedZone
                  - route53:DeleteHostedZone
                  - route53:ListQueryLoggingConfigs
                  - route53:GetChange
                Resource: "*"

  CopyZipsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:aws:s3:::${LambdaZipsBucketName}/${QSS3KeyPrefix}*'
Outputs:
  StackDirectorRoleArn:
    Value: !GetAtt StackDirectorRole.Arn
  CopyZipsRoleArn:
    Value: !GetAtt CopyZipsRole.Arn
